openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
- url: http://localhost:3000
  description: Generated server url
paths:
  /api/v1/businesses/{id}/addEmployee:
    put:
      tags:
      - business-controller
      operationId: addEmployee
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/addEmployeeRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/v1/businesses/{businessId}/removeEmployee/{employeeId}:
    put:
      tags:
      - business-controller
      operationId: removeEmployee
      parameters:
      - name: businessId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: employeeId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/v1/user/register:
    post:
      tags:
      - user-controller
      operationId: register
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AuthenticationResponse'
  /api/v1/user/login:
    post:
      tags:
      - user-controller
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthenticationRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AuthenticationResponse'
  /api/v1/product/{inventoryId}:
    post:
      tags:
      - product-controller
      operationId: createProduct
      parameters:
      - name: inventoryId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Product'
  /api/v1/inventory/{id}:
    get:
      tags:
      - inventory-controller
      operationId: getInventory
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Inventory'
    post:
      tags:
      - inventory-controller
      operationId: createInventory
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Inventory'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Inventory'
    delete:
      tags:
      - inventory-controller
      operationId: deleteInventory
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
    patch:
      tags:
      - inventory-controller
      operationId: modifyInventory
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Inventory'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Inventory'
  /api/v1/businesses:
    get:
      tags:
      - business-controller
      operationId: getAssociatedBusinesses
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                uniqueItems: true
                type: array
                items:
                  $ref: '#/components/schemas/Business'
    post:
      tags:
      - business-controller
      operationId: createBusiness
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Business'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Business'
  /api/v1/product/{id}:
    patch:
      tags:
      - product-controller
      operationId: modifyProduct
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Product'
  /api/v1/businesses/{id}:
    get:
      tags:
      - business-controller
      operationId: getBusiness
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Business'
    delete:
      tags:
      - business-controller
      operationId: deleteBusiness
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
    patch:
      tags:
      - business-controller
      operationId: updateBusiness
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Business'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Business'
  /api/v1/user:
    get:
      tags:
      - user-controller
      operationId: getAuthenticatedUser
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/User'
  /api/v1/inventory/{id}/products:
    get:
      tags:
      - inventory-controller
      operationId: getAllProducts
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                uniqueItems: true
                type: array
                items:
                  $ref: '#/components/schemas/Product'
  /api/v1/businesses/{id}/inventories:
    get:
      tags:
      - business-controller
      operationId: getBusinessInventories
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                uniqueItems: true
                type: array
                items:
                  $ref: '#/components/schemas/Inventory'
  /api/v1/businesses/owned:
    get:
      tags:
      - business-controller
      operationId: getOwnedBusinesses
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                uniqueItems: true
                type: array
                items:
                  $ref: '#/components/schemas/Business'
  /api/v1/product/{inventoryId}/{productId}:
    delete:
      tags:
      - product-controller
      operationId: deleteProduct
      parameters:
      - name: inventoryId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: productId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
components:
  schemas:
    addEmployeeRequest:
      type: object
      properties:
        email:
          type: string
        placeOfBirth:
          type: string
        dateOfBirth:
          type: string
          format: date-time
        homeAddress:
          type: string
        citizenship:
          type: string
        identityCardNumber:
          type: string
        socialSecurityNumber:
          type: string
        phoneNumber:
          type: string
    RegisterRequest:
      type: object
      properties:
        firstname:
          type: string
        lastname:
          type: string
        email:
          type: string
        taxNumber:
          type: string
        password:
          type: string
        gender:
          type: string
          enum:
          - MALE
          - FEMALE
          - OTHER
          - UNKNOWN
    AuthenticationResponse:
      type: object
      properties:
        token:
          type: string
    AuthenticationRequest:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
    Product:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        quantity:
          type: number
          format: double
        unit:
          type: string
        itemNumber:
          type: string
        category:
          type: string
        addedToInventory:
          type: string
          format: date-time
        addedBy:
          $ref: '#/components/schemas/User'
        dynProperties:
          type: object
          additionalProperties:
            type: string
    User:
      type: object
      properties:
        id:
          type: integer
          format: int32
        firstname:
          type: string
        lastname:
          type: string
        gender:
          type: string
          enum:
          - MALE
          - FEMALE
          - OTHER
          - UNKNOWN
        email:
          type: string
        placeOfBirth:
          type: string
        dateOfBirth:
          type: string
          format: date-time
        homeAddress:
          type: string
        citizenship:
          type: string
        identityCardNumber:
          type: string
        socialSecurityNumber:
          type: string
        phoneNumber:
          type: string
        fullName:
          type: string
    Inventory:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        address:
          type: string
        managerName:
          type: string
        managerPhone:
          type: string
        managerEmail:
          type: string
        products:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Product'
    Business:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        taxNumber:
          type: string
        headQuarters:
          type: string
        businessRegistrationDate:
          type: string
          format: date-time
        simsRegistrationDate:
          type: string
          format: date-time
        owner:
          $ref: '#/components/schemas/User'
        associates:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/User'
